#!/usr/bin/env python
from chef import autoconfigure, Search
from opencenter_helper import opencenter_endpoint, opencenter_chef
from argparse import ArgumentParser
from subprocess import call
import os

parser = ArgumentParser()
parser.add_argument('--name', action="store", dest="name",
                    required=False, default=os.getenv("CHEF_USER", default='test'),
                    help="Name for the opencenter chef environment")
parser.add_argument('--os', action="store", dest="os", required=False,
                    default='ubuntu',
                    help="Operating System to use for opencenter")
args = parser.parse_args()

chef = autoconfigure()
ep = opencenter_endpoint(chef, args.name, args.os)
chef = opencenter_chef(ep)
env = Search('environment', api=chef).query("*:*")[1]
user_name = env['override_attributes']['keystone']['admin_user']
user = env['override_attributes']['keystone']['users'][user_name]
password = user['password']
tenant = user['roles'].keys()[0]
controller = next(node for node in 
                  Search('node', api=chef).query("role:ha-controller*"))
url = controller['normal']['keystone']['publicURL']
strategy = 'keystone'
openrc = {'OS_USERNAME': user_name,
          'OS_PASSWORD': password,
          'OS_TENANT_NAME': tenant,
          'OS_AUTH_URL': url,
          'OS_AUTH_STRATEGY': strategy,
          'OS_NO_CACHE': '1'}
print "OpenStack environment set\nTry: nova list --all-tenants"
print '\n'.join(["$%s=%s" % (key, openrc[key]) for key in openrc.keys()])
for key in openrc.keys():
    os.putenv(key, openrc[key])
os.system(os.environ['SHELL'])
